-- ------------------------------------------------------------
--	Copyright 2012 Jeff Gunderson                         -
--	Licensed under the GNU Public License, Version 3.0    -
--                                                            -
--	Copyright 2014 LogicB Labs LLC                        -
--	Licensed under the GNU Public License, Version 3.0    -
-- ------------------------------------------------------------

-- Drop and Re-Create Schema
   
   DROP schema IF exists ERPI;
   CREATE SCHEMA ERPI;
   
-- Common Dimension

-- CREATE TABLES / VIEW FOR DATE DIMENSION

DROP VIEW IF EXISTS ERPI.`FISCAL_PERIODS_CL`;
DROP VIEW IF EXISTS ERPI.`DATE_DATA_CL`;
DROP TABLE IF EXISTS ERPI.`DATE_DATA` CASCADE;
DROP TABLE IF EXISTS ERPI.`DATE_DATA_EXTRACT` CASCADE;
DROP TABLE IF EXISTS ERPI.`FISCAL_PERIODS` CASCADE; 
DROP TABLE IF EXISTS ERPI.`TEMP_FISCAL_PERIODS` CASCADE;

DROP TABLE IF EXISTS ERPI.`DATE_DATA`;

CREATE TABLE ERPI.`DATE_DATA`
(
    `DATE_PATTERN` 	VARCHAR(2) NOT NULL,
    `DAYS_DATE` 	INTEGER NOT NULL,
    `THE_DATE` 		DATE,
    `YEAR` 			SMALLINT,
    `QUARTER` 		SMALLINT,
    `PERIOD`		SMALLINT,
    `WEEK`			SMALLINT,
    `DAY` 			SMALLINT
);

DROP TABLE IF EXISTS ERPI.`DATE_DATA_EXTRACT`;

CREATE TABLE ERPI.`DATE_DATA_EXTRACT` 
(
    DATA_MART 	VARCHAR(2) NOT NULL,
    THE_DATE 		DATE
);

DROP TABLE IF EXISTS ERPI.`FISCAL_PERIODS`;

CREATE TABLE ERPI.`FISCAL_PERIODS`
(
    `FISCAL_PERIOD_K`		INTEGER NOT NULL,
    `FISCAL_VARIANT`		VARCHAR(2),
    `FISCAL_YEAR`			SMALLINT,
    `FISCAL_PERIOD`			SMALLINT,
    `END_DATE`				DATE,
    `END_DAYS_DATE`			INTEGER,
    `BEGIN_DATE`			DATE,
    `BEGIN_DAYS_DATE`		INTEGER,
    `FISCAL_PERIOD_K_END` 	INTEGER,
    `DATE_FROM` 			TIMESTAMP,
    `DATE_TO` 				TIMESTAMP,
    `VERSION`				INTEGER
);

ALTER TABLE `ERPI`.`FISCAL_PERIODS`
ADD CONSTRAINT  `FISCAL_PERIODS_PK` PRIMARY KEY
    (
        `FISCAL_PERIOD_K` 
    );


CREATE VIEW `ERPI`.`DATE_DATA_CL` (
     `DAYS_DATE`,
     `THE_DATE`,
     `YEAR`,
     `QUARTER`,
     `PERIOD`,
	 `WEEK`,
     `DAY`
)
AS 
SELECT 
    `DAYS_DATE`, 
	`THE_DATE`,
	`YEAR`,
	`QUARTER`, 
	`PERIOD`,
	`WEEK`, 
	`DAY` 
FROM `ERPI`.`DATE_DATA` 
WHERE `DATE_PATTERN` = 'CL';
INSERT INTO `ERPI`.`DATE_DATA` VALUES ('CL',0,'1990-01-01',1990,1,1,1,1);


CREATE VIEW `ERPI`.`FISCAL_PERIODS_CL` (
    `FISCAL_PERIOD_K`,
    `END_DAYS_DATE`,
    `FISCAL_VARIANT`,
    `FISCAL_YEAR`,
    `FISCAL_PERIOD`,
    `END_DATE`,
    `BEGIN_DAYS_DATE`
 )
AS 
SELECT
	`FISCAL_PERIOD_K`, 
	`END_DAYS_DATE`, 
	`FISCAL_VARIANT`,
	`FISCAL_YEAR`, 
	`FISCAL_PERIOD`,
	`END_DATE`, 
	`BEGIN_DAYS_DATE`
  FROM `ERPI`.`FISCAL_PERIODS` 
  WHERE `FISCAL_VARIANT` = 'CL' OR
               `FISCAL_PERIOD_K` = 0;

DROP TABLE IF EXISTS ERPI.`TEMP_FISCAL_PERIODS`;

CREATE TABLE `ERPI`.`TEMP_FISCAL_PERIODS` 
(
    `FISCAL_PERIOD_K`		INTEGER NOT NULL,
    `FISCAL_VARIANT`		VARCHAR(2),
    `FISCAL_YEAR`			SMALLINT,
    `FISCAL_PERIOD`			SMALLINT,
    `END_DATE`				DATE,
    `END_DAYS_DATE`			INTEGER,
    `BEGIN_DATE`			DATE,
    `BEGIN_DAYS_DATE`		INTEGER,
    `DATE_FROM` 			TIMESTAMP,
    `DATE_TO` 				TIMESTAMP,
    `VERSION`				INTEGER
);

-- ---------------------------------------------------------------------------------------------------------------------------
DROP INDEX IF EXISTS `THE_DATE_INDEX`;

CREATE INDEX `THE_DATE_INDEX`
   ON ERPI.`DATE_DATA` 
(
    `DATE_PATTERN`,
	`THE_DATE`
);

-- ---------------------------------------------------------------------------------------------------------------------------
DROP TABLE IF EXISTS ERPI.`GEO_CITIES_DATA` CASCADE ;

CREATE TABLE ERPI.`GEO_CITIES_DATA` 
(
    `GEO_DATA_K`			INTEGER NOT NULL,
    `COUNTRY_CODE` 			VARCHAR(2) NOT NULL DEFAULT '==',
    `COUNTRY_NAME` 			VARCHAR(100) NOT NULL DEFAULT 'UNITED STATES',
    `REGION_CODE` 			VARCHAR(100) NOT NULL DEFAULT 'Unspecified',
    `CITY_NAME` 			VARCHAR(100) NOT NULL DEFAULT 'Unspecified',
    `CITY_ACCENT_NAME` 		VARCHAR(100) NOT NULL DEFAULT 'Unspecified',
	`LATITUDE`				DECIMAL(10,7) NOT NULL DEFAULT 0,
	`LONGITUDE`				DECIMAL(10,7) NOT NULL DEFAULT 0,
    `DATE_FROM` 			TIMESTAMP,
    `DATE_TO` 				TIMESTAMP,
    `VERSION`				INTEGER
);

ALTER TABLE ERPI.`GEO_CITIES_DATA`
 ADD CONSTRAINT  `GEO_DATA_K` PRIMARY KEY
   (
        `GEO_DATA_K` 
   );

CREATE INDEX `GEO_CITIES_DATA_NK_INDEX`
   ON ERPI.`GEO_CITIES_DATA`
   (
		`COUNTRY_NAME`,
      	`REGION_CODE`,
		`CITY_NAME`
  );

-- ---------------------------------------------------------------------------------------------------------------------------
-- We create the index in the schema definition, not here.  This is because the dimension
-- lookup/update step reads the dimension before inserting a record.  Use this on
-- all dimensions?
--
-- CREATE INDEX `GEO_CITIES_DATA_NK_INDEX`
--   ON ERPI.`GEO_CITIES_DATA`
--   (
--		`COUNTRY_NAME`,
--      	`REGION_CODE`,
--      	`CITY_ACCENT_NAME`
--   );

-- ---------------------------------------------------------------------------------------------------------------------------
-- CREATE LOCAL DIMENSIONS --
DROP VIEW IF EXISTS ERPI.`ACCOUNT_REP`;	
DROP VIEW IF EXISTS ERPI.`DIVISION`;

DROP TABLE IF EXISTS ERPI.`CUSTOMER` CASCADE;
DROP TABLE IF EXISTS ERPI.`PRODUCT` CASCADE;
DROP TABLE IF EXISTS ERPI.`BUSINESS_UNIT` CASCADE;
DROP TABLE IF EXISTS ERPI.`PROFIT_CENTER` CASCADE;
DROP TABLE IF EXISTS ERPI.`PERSON` CASCADE;
DROP TABLE IF EXISTS ERPI.`COMPANY` CASCADE;
DROP TABLE IF EXISTS ERPI.`LOCAL_CURRENCY` CASCADE;
DROP TABLE IF EXISTS ERPI.`DIVISION_TYPE` CASCADE;

DROP TABLE IF EXISTS ERPI.`CUSTOMER`;

CREATE TABLE ERPI.`CUSTOMER` 
(
    `CUSTOMER_K` 	INTEGER NOT NULL,
    `CUSTOMER_NK` 	VARCHAR(128) NOT NULL DEFAULT 'Unspecified',
    `CUSTOMER_NAME` 	VARCHAR(256) NOT NULL DEFAULT 'Unspecified',
    `PAYMENT_TERMS` 	VARCHAR(128) NOT NULL DEFAULT '-',
    `CREDIT_LIMIT` 	NUMERIC(16,2) NOT NULL DEFAULT 0,
    `DATE_FROM` 	TIMESTAMP,
    `DATE_TO` 		TIMESTAMP,
    `VERSION` 		INTEGER
);

ALTER TABLE ERPI.`CUSTOMER`
ADD CONSTRAINT  `CUSTOMER_K` PRIMARY KEY
    (
        `CUSTOMER_K` 
    );

CREATE INDEX `CUSTOMER_NK_INDEX`
   ON ERPI.`CUSTOMER` 
   (
	`CUSTOMER_NK`
   );

DROP TABLE IF EXISTS ERPI.`PRODUCT`;

CREATE TABLE ERPI.`PRODUCT` 
(
    `PRODUCT_K` 	INTEGER NOT NULL,
    `PRODUCT_NK` 	VARCHAR(128) NOT NULL DEFAULT 'Unspecified',
    `PRODUCT_NAME` 	VARCHAR(256) NOT NULL DEFAULT 'Unspecified',
    `CATEGORY` 	VARCHAR(128) NOT NULL DEFAULT 'Unspecified',
    `TYPE` 		VARCHAR(128) NOT NULL DEFAULT 'Unspecified',
    `CLASS` 		VARCHAR(128) NOT NULL DEFAULT 'Unspecified',
    `DATE_FROM` 	TIMESTAMP,
    `DATE_TO` 		TIMESTAMP,
    `VERSION` 	INTEGER
);

ALTER TABLE ERPI.`PRODUCT`
ADD CONSTRAINT  `PRODUCT_K` PRIMARY KEY
    (
        `PRODUCT_K` 
    );

CREATE INDEX `PRODUCT_NK_INDEX`
   ON ERPI.`PRODUCT` 
   (
	`PRODUCT_NK`
   );

DROP TABLE IF EXISTS ERPI.`BUSINESS_UNIT`;

CREATE TABLE ERPI.`BUSINESS_UNIT`
(
    `BUSINESS_UNIT_K` 	INTEGER NOT NULL,
    `BUSINESS_UNIT_NK` 	VARCHAR(12) NOT NULL DEFAULT 'Unspecified',
    `BUSINESS_UNIT` 	VARCHAR(265) NOT NULL DEFAULT 'Unspecified',
    `DATE_FROM` 	TIMESTAMP,
    `DATE_TO` 		TIMESTAMP,
    `VERSION` 		INTEGER
);

ALTER TABLE ERPI.`BUSINESS_UNIT`
ADD CONSTRAINT  `BUSINESS_UNIT_K` PRIMARY KEY
    (
        `BUSINESS_UNIT_K` 
    );

CREATE INDEX `BUSINESS_UNIT_NK_INDEX`  
   ON ERPI.`BUSINESS_UNIT`
   (
      `BUSINESS_UNIT_NK` 
   );

DROP TABLE IF EXISTS ERPI.`PROFIT_CENTER`;

CREATE TABLE ERPI.`PROFIT_CENTER`
(
    `PROFIT_CENTER_K` 	INTEGER NOT NULL,
    `PROFIT_CENTER_NK` 	VARCHAR(40) NOT NULL DEFAULT 'Unspecified',
  	`NAME`		 		VARCHAR(256) NOT NULL DEFAULT 'Unspecified',
    `DATE_FROM` 		TIMESTAMP,
    `DATE_TO` 			TIMESTAMP,
    `VERSION` 			INTEGER
);

ALTER TABLE ERPI.`PROFIT_CENTER`
ADD CONSTRAINT  `PROFIT_CENTER_K` PRIMARY KEY
    (
        `PROFIT_CENTER_K` 
    );

CREATE INDEX `PROFIT_CENTER_NK_INDEX`
   ON ERPI.`PROFIT_CENTER` 
   (
	`PROFIT_CENTER_NK`
   );

DROP TABLE IF EXISTS ERPI.`PERSON`;

CREATE TABLE ERPI.`PERSON` 
(
    `PERSON_K` 	INTEGER NOT NULL,
    `PERSON_NK` VARCHAR(128) NOT NULL DEFAULT 'Unspecified',
    `ROLE`      VARCHAR(128) NOT NULL DEFAULT '-',
    `NAME`      VARCHAR(256) NOT NULL DEFAULT '-',
    `DATE_FROM` TIMESTAMP,
    `DATE_TO` 	TIMESTAMP,
    `VERSION` 	INTEGER
);

ALTER TABLE ERPI.`PERSON`
ADD CONSTRAINT  `PERSON_K` PRIMARY KEY
    (
        `PERSON_K` 
    );

CREATE INDEX `PERSON_NK_INDEX`
   ON ERPI.`PERSON`
   (
	  `NAME`,
	  `ROLE`
   );

CREATE VIEW ERPI.`ACCOUNT_REP`	
(
     `ACCOUNT_REP_K`,
	 `ACCOUNT_REP_NO`,
     `ACCOUNT_REP_NAME`
)
AS 
SELECT `PERSON_K`, `PERSON_NK`, `NAME` FROM ERPI.`PERSON` WHERE `ROLE` = 'ACCOUNT_REP' OR `PERSON_K`=0;


DROP TABLE IF EXISTS ERPI.`COMPANY`;

CREATE TABLE ERPI.`COMPANY` 
(
    `COMPANY_K` 	INTEGER NOT NULL,
    `COMPANY_NK` 	VARCHAR(12) NOT NULL DEFAULT 'Unspecified',
    `COMPANY_NAME` 	VARCHAR(256) NOT NULL DEFAULT 'Unspecified',
    `COMPANY_EXTERNAL`      VARCHAR(1),
    `DATE_FROM` 	TIMESTAMP,
    `DATE_TO` 		TIMESTAMP,
    `VERSION` 		INTEGER
);

ALTER TABLE ERPI.`COMPANY`
ADD CONSTRAINT  `COMPANY_K` PRIMARY KEY
    (
        `COMPANY_K` 
    );

CREATE INDEX `COMPANY_NK_INDEX`
   ON ERPI.`COMPANY` 
   (
    `COMPANY_NK`
   );

DROP TABLE IF EXISTS ERPI.`LOCAL_CURRENCY`;

CREATE TABLE ERPI.`LOCAL_CURRENCY` 
(
    `LOCAL_CURRENCY_K` 	INTEGER NOT NULL,
    `LOCAL_CURRENCY_NK` 	VARCHAR(12) NOT NULL DEFAULT 'Unspecified',
    `LOCAL_CURRENCY_BASE`      VARCHAR(1),
    `DATE_FROM` 	TIMESTAMP,
    `DATE_TO` 		TIMESTAMP,
    `VERSION` 		INTEGER
);

ALTER TABLE ERPI.`LOCAL_CURRENCY`
ADD CONSTRAINT  `LOCAL_CURRENCY_K` PRIMARY KEY
    (
        `LOCAL_CURRENCY_K` 
    );

CREATE INDEX `LOCAL_CURRENCY_NK_INDEX`
   ON ERPI.`LOCAL_CURRENCY` 
   (
    `LOCAL_CURRENCY_NK`
   );

DROP TABLE IF EXISTS ERPI.`DIVISION_TYPE`;

CREATE TABLE ERPI.`DIVISION_TYPE`
(
    `DIVISION_K` 	INTEGER NOT NULL,
    `DIVISION_TYPE` 	VARCHAR(30)NOT NULL DEFAULT 'Unspecified',
    `DIVISION_CODE` 	VARCHAR(12) NOT NULL DEFAULT 'Unspecified',
    `DIVISION_NAME` 	VARCHAR(256) NOT NULL DEFAULT 'Unspecified',
    `DATE_FROM` 	TIMESTAMP,
    `DATE_TO` 		TIMESTAMP,
    `VERSION` 		INTEGER
);

ALTER TABLE ERPI.`DIVISION_TYPE`
ADD CONSTRAINT  `DIVISION_K` PRIMARY KEY
    (
        `DIVISION_K` 
    );

CREATE INDEX `DIVISION_TYPE_NK_INDEX`
   ON ERPI.`DIVISION_TYPE` 
   (
    `DIVISION_TYPE`,
	`DIVISION_CODE`
   );
    
    

CREATE VIEW ERPI.`DIVISION`
(
     `DIVISION_K`,
     `DIVISION_CODE`,
     `DIVISION_NAME`,
     `DATE_FROM`,
     `DATE_TO`,
     `VERSION`
)
AS 
SELECT `DIVISION_K`, `DIVISION_CODE`, `DIVISION_NAME`, `DATE_FROM`, `DATE_TO`, `VERSION` FROM ERPI.`DIVISION_TYPE` WHERE `DIVISION_TYPE` = 'DIVISION' OR `DIVISION_K` = 0;

-- ----------------------------------------------------------------------------------------
-- ---------------------------------------------------------------------------------------------------------------------------
-- DROP & CREATE SO Tables & Views
DROP TABLE IF EXISTS ERPI.`SALES_ORDER_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`AGG_NOITEM_SALES_ORDER_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`AGG_NOCUST_SALES_ORDER_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`SALES_DELIVERY_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`AGG_NOCUST_SALES_DELIVERY_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`SO_FACTS_BY_PERIOD` CASCADE;

/*******************************************************************
Sales Order Facts.  Must parallel aggregate tables and period tables
*******************************************************************/

CREATE TABLE ERPI.`SALES_ORDER_FACTS`
(
    `ID_DOCUMENT_NK` 	VARCHAR(30) NOT NULL DEFAULT 'Unspecified',		/* order document - degenerate */
    `ID_TRANS_DOC_NK` 	VARCHAR(30) NOT NULL DEFAULT 'Unspecified',		/* order document - degenerate */
    `LINE_NK` 			VARCHAR(30) NOT NULL DEFAULT 'Unspecified',		/* document line - degenerate  */
	`ISSUE_DATE_K` 		INTEGER NOT NULL,		/* document issue date */
	`PROMISE_DATE_K`	INTEGER NOT NULL,		/* customer promise date */
    `AMOUNT` 			NUMERIC (24,9) NOT NULL, /* line amount base currency */
    `AMOUNT_LOCAL` 		NUMERIC (24,9) NOT NULL, /* line amount local currency */
    `AMOUNT_LIST`		NUMERIC (24,9) NOT NULL, /* line list amount base currency */
    `AMOUNT_LIST_LOCAL`	NUMERIC (24,9) NOT NULL, /* line list amount local currency */
    `QUANTITY_ORDER`	NUMERIC (24,9) NOT NULL, /* quantity ordered */
    `COST` 				NUMERIC (24,9) NOT NULL, /* item cost */
    `COMPANY_K` 		INTEGER NOT NULL,
    `CUSTOMER_K` 		INTEGER NOT NULL,
    `ITEM_K` 			INTEGER NOT NULL,
    `DIVISION_K` 		INTEGER NOT NULL,
    `BUSINESS_UNIT_K`	INTEGER NOT NULL,
    `PROFIT_CENTER_K` 	INTEGER NOT NULL,
    `ACCOUNT_REP_K`     INTEGER NOT NULL,
    `BILL_CITY_K`     	INTEGER NOT NULL,
    `SHIP_CITY_K`     	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 	INTEGER NOT NULL
);

 ALTER TABLE ERPI.`SALES_ORDER_FACTS`
 ADD CONSTRAINT  `SO_ORDER_FACTS_K` PRIMARY KEY
   (
        `ID_TRANS_DOC_NK` ,
        `LINE_NK`,
        `COMPANY_K` 
   );

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_COMPANY_FK` FOREIGN KEY (`COMPANY_K`)
    REFERENCES ERPI.`COMPANY`(`COMPANY_K`);

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_PRODUCT_FK` FOREIGN KEY (`ITEM_K`)
    REFERENCES ERPI.`PRODUCT`(`PRODUCT_K`);

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_DIVISION_FK` FOREIGN KEY (`DIVISION_K`)
    REFERENCES ERPI.`DIVISION_TYPE`(`DIVISION_K`);

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_BUSINESS_UNIT_FK` FOREIGN KEY (`BUSINESS_UNIT_K`)
    REFERENCES ERPI.`BUSINESS_UNIT`(`BUSINESS_UNIT_K`);

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_CUSTOMER_FK` FOREIGN KEY (`CUSTOMER_K`)
    REFERENCES ERPI.`CUSTOMER`(`CUSTOMER_K`);

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_ACCOUNT_REP_FK` FOREIGN KEY (`ACCOUNT_REP_K`)
    REFERENCES ERPI.`PERSON`(`PERSON_K`);

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_BILL_CITY_FK` FOREIGN KEY (`BILL_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

ALTER TABLE ERPI.`SALES_ORDER_FACTS`
ADD CONSTRAINT `SO_ORDER_SHIP_CITY_FK` FOREIGN KEY (`SHIP_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

/****************************************************************
Aggregate table, summarizing all items and orders into periods
****************************************************************/

CREATE TABLE ERPI.`AGG_NOITEM_SALES_ORDER_FACTS`
(
    `ORDERDATE_YEAR` 		SMALLINT NOT NULL,
    `ORDERDATE_PERIOD` 		SMALLINT NOT NULL,
    `PROMISEDATE_YEAR` 		SMALLINT NOT NULL,
    `PROMISEDATE_PERIOD` 	SMALLINT NOT NULL,
    `COMPANY_K` 			INTEGER NOT NULL,
    `CUSTOMER_K` 			INTEGER NOT NULL,
    `DIVISION_K` 			INTEGER NOT NULL,
    `BUSINESS_UNIT_K`		INTEGER NOT NULL,
    `PROFIT_CENTER_K` 		INTEGER NOT NULL,
    `ACCOUNT_REP_K`     	INTEGER NOT NULL,
    `BILL_CITY_K`     		INTEGER NOT NULL,
    `SHIP_CITY_K`     		INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 		INTEGER NOT NULL,
    `AMOUNT` 				NUMERIC (24,9) NOT NULL, /* line amount base currency */
    `AMOUNT_LOCAL` 			NUMERIC (24,9) NOT NULL, /* line amount local currency */
    `AMOUNT_LIST`			NUMERIC (24,9) NOT NULL, /* line list amount base currency */
    `AMOUNT_LIST_LOCAL`		NUMERIC (24,9) NOT NULL, /* line list amount local currency */
    `QUANTITY_ORDER`		NUMERIC (24,9) NOT NULL, /* quantity ordered */
    `ID_DOCUMENT_NK` 		INTEGER NOT NULL,        /*distinct for quantity of orders */
    `COST` 					NUMERIC (24,9) NOT NULL,  /* item cost */
    `DAYS_ORDER_DATE` 		INTEGER NOT NULL,
    `DAYS_PROMISE_DATE` 	INTEGER NOT NULL,
    `FACT_COUNT` 			INTEGER NOT NULL
);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_ORDER_DIVISION_FK` FOREIGN KEY (`DIVISION_K`)
    REFERENCES ERPI.`DIVISION_TYPE`(`DIVISION_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_ORDER_BUSINESS_UNIT_FK` FOREIGN KEY (`BUSINESS_UNIT_K`)
    REFERENCES ERPI.`BUSINESS_UNIT`(`BUSINESS_UNIT_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_ORDER_CUSTOMER_FK` FOREIGN KEY (`CUSTOMER_K`)
    REFERENCES ERPI.`CUSTOMER`(`CUSTOMER_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_ORDER_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_ORDER_ACCOUNT_REP_FK` FOREIGN KEY (`ACCOUNT_REP_K`)
    REFERENCES ERPI.`PERSON`(`PERSON_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_ORDER_BILL_CITY_FK` FOREIGN KEY (`BILL_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_ORDER_SHIP_CITY_FK` FOREIGN KEY (`SHIP_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

/****************************************************************
Aggregate table, summarizing all customers and orders into periods
Ship & Bill cities are also summarized as they usually correspond
to customers.
****************************************************************/

CREATE TABLE ERPI.`AGG_NOCUST_SALES_ORDER_FACTS`
(
    `ORDERDATE_YEAR` 		SMALLINT NOT NULL,
    `ORDERDATE_PERIOD` 		SMALLINT NOT NULL,
    `PROMISEDATE_YEAR` 		SMALLINT NOT NULL,
    `PROMISEDATE_PERIOD` 	SMALLINT NOT NULL,
    `COMPANY_K` 			INTEGER NOT NULL,
    `ITEM_K` 				INTEGER NOT NULL,
    `DIVISION_K` 			INTEGER NOT NULL,
    `BUSINESS_UNIT_K`		INTEGER NOT NULL,
    `PROFIT_CENTER_K` 		INTEGER NOT NULL,
    `ACCOUNT_REP_K`     	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 		INTEGER NOT NULL,
    `AMOUNT` 				NUMERIC (24,9) NOT NULL, /* line amount base currency */
    `AMOUNT_LOCAL` 			NUMERIC (24,9) NOT NULL, /* line amount local currency */
    `AMOUNT_LIST`			NUMERIC (24,9) NOT NULL, /* line list amount base currency */
    `AMOUNT_LIST_LOCAL`		NUMERIC (24,9) NOT NULL, /* line list amount local currency */
    `QUANTITY_ORDER`		NUMERIC (24,9) NOT NULL, /* quantity ordered */
    `ID_DOCUMENT_NK` 		INTEGER NOT NULL,        /*distinct for quantity of orders */
    `COST` 					NUMERIC (24,9) NOT NULL,  /* item cost */
    `DAYS_ORDER_DATE` 		INTEGER NOT NULL,
    `DAYS_PROMISE_DATE` 	INTEGER NOT NULL,
    `FACT_COUNT` 			INTEGER NOT NULL
);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_ORDER_PRODUCT_FK` FOREIGN KEY (`ITEM_K`)
    REFERENCES ERPI.`PRODUCT`(`PRODUCT_K`);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_ORDER_DIVISION_FK` FOREIGN KEY (`DIVISION_K`)
    REFERENCES ERPI.`DIVISION_TYPE`(`DIVISION_K`);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_ORDER_BUSINESS_UNIT_FK` FOREIGN KEY (`BUSINESS_UNIT_K`)
    REFERENCES ERPI.`BUSINESS_UNIT`(`BUSINESS_UNIT_K`);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_ORDER_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_ORDER_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_ORDER_ACCOUNT_REP_FK` FOREIGN KEY (`ACCOUNT_REP_K`)
    REFERENCES ERPI.`PERSON`(`PERSON_K`);


/*******************************************************************
Sales Deliv Facts.  Must parallel aggregate tables and period tables
*******************************************************************/

CREATE TABLE ERPI.`SALES_DELIVERY_FACTS`
(
    `ID_DOCUMENT_NK` 	VARCHAR(30) NOT NULL DEFAULT 'Unspecified',		/* order document - degenerate  */
    `ID_TRANS_DOC_NK` 	VARCHAR(30) NOT NULL DEFAULT 'Unspecified',		/* delivery or invoice doc - deg*/
    `LINE_NK` 			VARCHAR(30) NOT NULL DEFAULT 'Unspecified',		/* document line - degenerate   */
	`ISSUE_DATE_K` 		INTEGER NOT NULL,		/* document issue date */
	`PROMISE_DATE_K`	INTEGER NOT NULL,		/* customer promise date */
    `AMOUNT` 			NUMERIC (24,9) NOT NULL, /* delivery line amount base currency */
    `AMOUNT_LOCAL` 		NUMERIC (24,9) NOT NULL, /* delivery line amount local currency */
    `AMOUNT_LIST`		NUMERIC (24,9) NOT NULL, /* delivery line list amount base currency */
    `AMOUNT_LIST_LOCAL`	NUMERIC (24,9) NOT NULL, /* delivery line list amount local currency */
    `QUANTITY_ORDER`	NUMERIC (24,9) NOT NULL, /* quantity ordered */
    `COST` 				NUMERIC (24,9) NOT NULL, /* item cost */
    `COMPANY_K` 		INTEGER NOT NULL,
    `CUSTOMER_K` 		INTEGER NOT NULL,
    `ITEM_K` 			INTEGER NOT NULL,
    `DIVISION_K` 		INTEGER NOT NULL,
    `BUSINESS_UNIT_K`	INTEGER NOT NULL,
    `PROFIT_CENTER_K` 	INTEGER NOT NULL,
    `ACCOUNT_REP_K`     INTEGER NOT NULL,
    `BILL_CITY_K`     	INTEGER NOT NULL,
    `SHIP_CITY_K`     	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 	INTEGER NOT NULL
);

 ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
 ADD CONSTRAINT  `SO_DELIVERY_FACTS_K` PRIMARY KEY
   (
        `ID_TRANS_DOC_NK` ,
        `LINE_NK`,
        `COMPANY_K` 
   );

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_COMPANY_FK` FOREIGN KEY (`COMPANY_K`)
    REFERENCES ERPI.`COMPANY`(`COMPANY_K`);

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_PRODUCT_FK` FOREIGN KEY (`ITEM_K`)
    REFERENCES ERPI.`PRODUCT`(`PRODUCT_K`);

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_DIVISION_FK` FOREIGN KEY (`DIVISION_K`)
    REFERENCES ERPI.`DIVISION_TYPE`(`DIVISION_K`);

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_BUSINESS_UNIT_FK` FOREIGN KEY (`BUSINESS_UNIT_K`)
    REFERENCES ERPI.`BUSINESS_UNIT`(`BUSINESS_UNIT_K`);

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_CUSTOMER_FK` FOREIGN KEY (`CUSTOMER_K`)
    REFERENCES ERPI.`CUSTOMER`(`CUSTOMER_K`);

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_ACCOUNT_REP_FK` FOREIGN KEY (`ACCOUNT_REP_K`)
    REFERENCES ERPI.`PERSON`(`PERSON_K`);

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_BILL_CITY_FK` FOREIGN KEY (`BILL_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

ALTER TABLE ERPI.`SALES_DELIVERY_FACTS`
ADD CONSTRAINT `SO_DELIVERY_SHIP_CITY_FK` FOREIGN KEY (`SHIP_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

/****************************************************************
Aggregate table, summarizing all items and deliveries into periods
****************************************************************/

CREATE TABLE ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS`
(
    `DELIVERYDATE_YEAR` 	SMALLINT NOT NULL,
    `DELIVERYDATE_PERIOD` SMALLINT NOT NULL,
    `PROMISEDATE_YEAR` SMALLINT NOT NULL,
    `PROMISEDATE_PERIOD` SMALLINT NOT NULL,
    `COMPANY_K` 		INTEGER NOT NULL,
    `CUSTOMER_K` 		INTEGER NOT NULL,
    `DIVISION_K` 		INTEGER NOT NULL,
    `BUSINESS_UNIT_K`		INTEGER NOT NULL,
    `PROFIT_CENTER_K` 		INTEGER NOT NULL,
    `ACCOUNT_REP_K`     	INTEGER NOT NULL,
    `BILL_CITY_K`     		INTEGER NOT NULL,
    `SHIP_CITY_K`     		INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 		INTEGER NOT NULL,
    `AMOUNT` 			NUMERIC (24,9) NOT NULL, /* line amount base currency */
    `AMOUNT_LOCAL` 		NUMERIC (24,9) NOT NULL, /* line amount local currency */
    `AMOUNT_LIST`		NUMERIC (24,9) NOT NULL, /* line list amount base currency */
    `AMOUNT_LIST_LOCAL`		NUMERIC (24,9) NOT NULL, /* line list amount local currency */
    `QUANTITY_ORDER`		NUMERIC (24,9) NOT NULL, /* quantity ordered */
    `ID_DOCUMENT_NK` 		INTEGER NOT NULL,        /*distinct for quantity of orders */
    `ID_TRANS_DOC_NK` 		INTEGER NOT NULL,        /*distinct for quantity of deliveries */
    `COST` 			NUMERIC (24,9) NOT NULL,  /* item cost */
    `DAYS_DELIVERY_DATE` 		INTEGER NOT NULL,
    `DAYS_PROMISE_DATE` 	INTEGER NOT NULL,
    `FACT_COUNT` 		INTEGER NOT NULL
);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_DELIVERY_DIVISION_FK` FOREIGN KEY (`DIVISION_K`)
    REFERENCES ERPI.`DIVISION_TYPE`(`DIVISION_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_DELIVERY_BUSINESS_UNIT_FK` FOREIGN KEY (`BUSINESS_UNIT_K`)
    REFERENCES ERPI.`BUSINESS_UNIT`(`BUSINESS_UNIT_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_DELIVERY_CUSTOMER_FK` FOREIGN KEY (`CUSTOMER_K`)
    REFERENCES ERPI.`CUSTOMER`(`CUSTOMER_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_DELIVERY_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_DELIVERY_ACCOUNT_REP_FK` FOREIGN KEY (`ACCOUNT_REP_K`)
    REFERENCES ERPI.`PERSON`(`PERSON_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_DELIVERY_BILL_CITY_FK` FOREIGN KEY (`BILL_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

ALTER TABLE ERPI.`AGG_NOITEM_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOITEM_SO_DELIVERY_SHIP_CITY_FK` FOREIGN KEY (`SHIP_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

/****************************************************************
Aggregate table, summarizing all customers and deliv into periods
Ship & Bill cities are also summarized as they usually correspond
to customers.
****************************************************************/

CREATE TABLE ERPI.`AGG_NOCUST_SALES_DELIVERY_FACTS`
(
    `DELIVERYDATE_YEAR` 	SMALLINT NOT NULL,
    `DELIVERYDATE_PERIOD` SMALLINT NOT NULL,
    `PROMISEDATE_YEAR` SMALLINT NOT NULL,
    `PROMISEDATE_PERIOD` SMALLINT NOT NULL,
    `COMPANY_K` 		INTEGER NOT NULL,
    `ITEM_K` 			INTEGER NOT NULL,
    `DIVISION_K` 		INTEGER NOT NULL,
    `BUSINESS_UNIT_K`		INTEGER NOT NULL,
    `PROFIT_CENTER_K` 		INTEGER NOT NULL,
    `ACCOUNT_REP_K`     	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 		INTEGER NOT NULL,
    `AMOUNT` 			NUMERIC (24,9) NOT NULL, /* line amount base currency */
    `AMOUNT_LOCAL` 		NUMERIC (24,9) NOT NULL, /* line amount local currency */
    `AMOUNT_LIST`		NUMERIC (24,9) NOT NULL, /* line list amount base currency */
    `AMOUNT_LIST_LOCAL`		NUMERIC (24,9) NOT NULL, /* line list amount local currency */
    `QUANTITY_ORDER`		NUMERIC (24,9) NOT NULL, /* quantity ordered */
    `ID_DOCUMENT_NK` 		INTEGER NOT NULL,        /*distinct for quantity of orders */
    `ID_TRANS_DOC_NK` 		INTEGER NOT NULL,        /*distinct for quantity of deliveries */
    `COST` 			NUMERIC (24,9) NOT NULL,  /* item cost */
    `DAYS_DELIVERY_DATE` 		INTEGER NOT NULL,
    `DAYS_PROMISE_DATE` 	INTEGER NOT NULL,
    `FACT_COUNT` 		INTEGER NOT NULL
);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_DELIVERY_PRODUCT_FK` FOREIGN KEY (`ITEM_K`)
    REFERENCES ERPI.`PRODUCT`(`PRODUCT_K`);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_DELIVERY_DIVISION_FK` FOREIGN KEY (`DIVISION_K`)
    REFERENCES ERPI.`DIVISION_TYPE`(`DIVISION_K`);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_DELIVERY_BUSINESS_UNIT_FK` FOREIGN KEY (`BUSINESS_UNIT_K`)
    REFERENCES ERPI.`BUSINESS_UNIT`(`BUSINESS_UNIT_K`);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_DELIVERY_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`AGG_NOCUST_SALES_DELIVERY_FACTS`
ADD CONSTRAINT `AGG_NOCUST_SO_DELIVERY_ACCOUNT_REP_FK` FOREIGN KEY (`ACCOUNT_REP_K`)
    REFERENCES ERPI.`PERSON`(`PERSON_K`);

CREATE TABLE ERPI.`SO_FACTS_BY_PERIOD`
(
  	`DATE_PATTERN` 		character varying(2) NOT NULL,
  	`FISCAL_PERIOD_K` 	integer NOT NULL,
	`TRANS_TYPE`		character varying(8) NOT NULL,
	`ENDDATE` 			INTEGER NOT NULL,		        /* julian eop or delivery date */
    `ID_DOCUMENT_NK` 	VARCHAR(30) NOT NULL, 			/* order document - degenerate */
    `ID_TRANS_DOC_NK` 	VARCHAR(30) NOT NULL,			/* last delivery - degenerate  */
	`ISSUE_DATE_K` 		INTEGER NOT NULL,				/* julian document issue date */
	`PROMISE_DATE_K`	INTEGER NOT NULL,				/* customer promise date */
	`DELIVERY_DATE_K`	INTEGER NOT NULL,				/* last delivery date */
    `ORDER SUM` 		NUMERIC (24,9) NOT NULL,		/* order sum base currency */
    `ORDER SUM LOCAL`	NUMERIC (24,9) NOT NULL,		/* order sum local currency */  
    `DELIVERY SUM` 		NUMERIC (24,9) NOT NULL,		/* delivery sum base currency */ 
    `DELIVERY SUM LOCAL` NUMERIC (24,9) NOT NULL,		/* delivery sum local currency */ 
    `COST SUM`			NUMERIC (24,9) NOT NULL,		/* cost sum base currency */  
    `COMPANY_K` 		INTEGER NOT NULL,
    `CUSTOMER_K` 		INTEGER NOT NULL,
    `ITEM_K` 			INTEGER NOT NULL,
    `DIVISION_K` 		INTEGER NOT NULL,
    `BUSINESS_UNIT_K`	INTEGER NOT NULL,
    `PROFIT_CENTER_K` 	INTEGER NOT NULL,
    `ACCOUNT_REP_K`     INTEGER NOT NULL,
    `BILL_CITY_K`     	INTEGER NOT NULL,
    `SHIP_CITY_K`     	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 	INTEGER NOT NULL
);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_COMPANY_FK` FOREIGN KEY (`COMPANY_K`)
    REFERENCES ERPI.`COMPANY`(`COMPANY_K`);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_PRODUCT_FK` FOREIGN KEY (`ITEM_K`)
    REFERENCES ERPI.`PRODUCT`(`PRODUCT_K`);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_DIVISION_FK` FOREIGN KEY (`DIVISION_K`)
    REFERENCES ERPI.`DIVISION_TYPE`(`DIVISION_K`);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_BUSINESS_UNIT_FK` FOREIGN KEY (`BUSINESS_UNIT_K`)
    REFERENCES ERPI.`BUSINESS_UNIT`(`BUSINESS_UNIT_K`);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_CUSTOMER_FK` FOREIGN KEY (`CUSTOMER_K`)
    REFERENCES ERPI.`CUSTOMER`(`CUSTOMER_K`);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_ACCOUNT_REP_FK` FOREIGN KEY (`ACCOUNT_REP_K`)
    REFERENCES ERPI.`PERSON`(`PERSON_K`);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_BILL_CITY_FK` FOREIGN KEY (`BILL_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

ALTER TABLE ERPI.`SO_FACTS_BY_PERIOD`
ADD CONSTRAINT `SO_BY_PERIOD_SHIP_CITY_FK` FOREIGN KEY (`SHIP_CITY_K`)
    REFERENCES ERPI.`GEO_CITIES_DATA`(`GEO_DATA_K`);

-- ---------------------------------------------------------------------------------------------------------------------------
-- CREATE SO Fact Indexes
--
-- SALES_ORDER_FACTS foreign key indexes and natural keys indexes
--

CREATE INDEX `SALES_ORDER_FACTS_ISSUE_DATE_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `ISSUE_DATE_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_PROMISE_DATE_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `PROMISE_DATE_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_ID_DOCUMENT_NK`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `ID_DOCUMENT_NK`
   );

CREATE INDEX `SALES_ORDER_FACTS_ID_TRANS_DOC_NK`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `ID_TRANS_DOC_NK`
   );

CREATE INDEX `SALES_ORDER_FACTS_LINE_NK`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `LINE_NK`
   );

CREATE INDEX `SALES_ORDER_FACTS_COMPANY_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `COMPANY_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_ITEM_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `ITEM_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_DIVISION_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `DIVISION_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_BUSINESS_UNIT_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `BUSINESS_UNIT_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_CUSTOMER_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `CUSTOMER_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_PROFIT_CENTER_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `PROFIT_CENTER_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_ACCOUNT_REP_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `ACCOUNT_REP_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_BILL_CITY_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `BILL_CITY_K`
   );

CREATE INDEX `SALES_ORDER_FACTS_SHIP_CITY_K`  
   ON ERPI.`SALES_ORDER_FACTS`
   (
      `SHIP_CITY_K`
   );

--
-- SALES_DELIVERY_FACTS foreign key indexes and natural keys indexes
--

CREATE INDEX `SALES_DELIVERY_FACTS_ISSUE_DATE_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `ISSUE_DATE_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_PROMISE_DATE_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `PROMISE_DATE_K`
   );


CREATE INDEX `SALES_DELIVERY_FACTS_ID_DOCUMENT_NK`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `ID_DOCUMENT_NK`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_ID_TRANS_DOC_NK`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `ID_TRANS_DOC_NK`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_LINE_NK`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `LINE_NK`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_COMPANY_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `COMPANY_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_ITEM_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `ITEM_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_DIVISION_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `DIVISION_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_BUSINESS_UNIT_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `BUSINESS_UNIT_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_CUSTOMER_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `CUSTOMER_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_PROFIT_CENTER_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `PROFIT_CENTER_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_ACCOUNT_REP_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `ACCOUNT_REP_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_BILL_CITY_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `BILL_CITY_K`
   );

CREATE INDEX `SALES_DELIVERY_FACTS_SHIP_CITY_K`  
   ON ERPI.`SALES_DELIVERY_FACTS`
   (
      `SHIP_CITY_K`
   );

--
-- SO_FACTS_BY_PERIOD foreign key indexes and natural keys indexes
--

CREATE INDEX `SO_FACTS_BY_PERIOD_ISSUE_DATE_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `ISSUE_DATE_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_PROMISE_DATE_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `PROMISE_DATE_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_DELIVERY_DATE_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `DELIVERY_DATE_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_FISCAL_PERIOD_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `FISCAL_PERIOD_K`
   );


CREATE INDEX `SO_FACTS_BY_PERIOD_ID_DOCUMENT_NK`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `ID_DOCUMENT_NK`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_ID_TRANS_DOC_NK`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `ID_TRANS_DOC_NK`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_COMPANY_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `COMPANY_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_ITEM_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `ITEM_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_DIVISION_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `DIVISION_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_BUSINESS_UNIT_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `BUSINESS_UNIT_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_CUSTOMER_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `CUSTOMER_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_PROFIT_CENTER_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `PROFIT_CENTER_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_ACCOUNT_REP_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `ACCOUNT_REP_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_BILL_CITY_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `BILL_CITY_K`
   );

CREATE INDEX `SO_FACTS_BY_PERIOD_SHIP_CITY_K`  
   ON ERPI.`SO_FACTS_BY_PERIOD`
   (
      `SHIP_CITY_K`
   );

-- ---------------------------------------------------------------------------------------------------------------------------
-- Drop and Create GL Tables & Views
DROP TABLE IF EXISTS ERPI.`GL_ACCOUNT` CASCADE ;
DROP TABLE IF EXISTS ERPI.`GL_BUDGET` CASCADE;
DROP TABLE IF EXISTS ERPI.`GL_ACCOUNT_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`GL_ACCOUNT_PERIOD_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`GL_BUDGET_PERIOD_FACTS` CASCADE;
DROP TABLE IF EXISTS ERPI.`GL_FACTS_BY_PERIOD` CASCADE;


CREATE TABLE ERPI.`GL_ACCOUNT` 
(
    `ACCOUNT_K`   	INTEGER NOT NULL UNIQUE,
    `ACCOUNT_NK` 	VARCHAR(30) NOT NULL DEFAULT 'Unspecified',
    `NAME` 			VARCHAR(128) NOT NULL DEFAULT 'Unspecified',
    `TYPE`		 	VARCHAR(30) NOT NULL DEFAULT 'Unspecified',
    `SUBTYPE` 		VARCHAR(30) NOT NULL DEFAULT 'Unspecified',
    `CFTYPE` 		VARCHAR(30) DEFAULT 'Non Cash Flow',
    `DATE_FROM` 	TIMESTAMP,
    `DATE_TO` 		TIMESTAMP,
    `VERSION` 		INTEGER
);

CREATE INDEX `GL_ACCOUNT_NK_INDEX`  
   ON ERPI.`GL_ACCOUNT`
   (
      `ACCOUNT_NK` 
   );

ALTER TABLE ERPI.`GL_ACCOUNT`
ADD CONSTRAINT  `ACCOUNT_K` PRIMARY KEY
    (
        `ACCOUNT_K` 
    );

CREATE TABLE ERPI.`GL_BUDGET` 
(
    `BUDGET_K`    	INTEGER NOT NULL UNIQUE,
    `BUDGET_NK`     VARCHAR(30) NOT NULL DEFAULT 'Unspecified',
    `NAME` 			VARCHAR(128) NOT NULL DEFAULT 'Unspecified',
    `DATE_FROM` 	TIMESTAMP,
    `DATE_TO` 		TIMESTAMP,
    `VERSION` 		INTEGER
);

CREATE INDEX `GL_BUDGET_NK_INDEX`  
   ON ERPI.`GL_BUDGET`
   (
      `BUDGET_NK`
   );


ALTER TABLE ERPI.`GL_BUDGET`
ADD CONSTRAINT  `GL_BUDGET_PK` PRIMARY KEY
    (
        `BUDGET_K` 
    );

CREATE TABLE ERPI.`GL_ACCOUNT_FACTS`
(
    `COMPANY_K` 		INTEGER NOT NULL,
    `LEDGER_NK`	 		VARCHAR(2) NOT NULL DEFAULT 'GL', /* ledger type degenerate dimension */
	`JOURNAL_DOC_TYPE_NK`  VARCHAR(30) NOT NULL,		/* journal type degenerate dimension */
	`JOURNAL_DOC_NK`		VARCHAR(40) NOT NULL,		/* journal doc id degenerate dimension */
	`JOURNAL_LINE_ITEM_NK`	VARCHAR(30) NOT NULL,		/* journal line degenerate dimension */
	`ACCOUNT_K` 		INTEGER NOT NULL,
  	`TRANS_DATE_K` 		integer NOT NULL,
    `CREDIT` 			NUMERIC (12,2) NOT NULL,		/* credit base currency */
    `CREDIT_LOCAL`		NUMERIC (12,2) NOT NULL,		/* credit local currency */  
    `DEBIT` 			NUMERIC (12,2) NOT NULL,		/* debit base currency */ 
    `DEBIT_LOCAL` 		NUMERIC (12,2) NOT NULL,		/* debit local currency */ 
    `PROFIT_CENTER_K` 	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 	INTEGER NOT NULL
);


 ALTER TABLE ERPI.`GL_ACCOUNT_FACTS`
 ADD CONSTRAINT  `GL_ACCOUNT_FACTS_K` PRIMARY KEY
   (
    `COMPANY_K`,
    `LEDGER_NK`,
	`JOURNAL_DOC_TYPE_NK`,
	`JOURNAL_DOC_NK`,
	`JOURNAL_LINE_ITEM_NK`,
	`ACCOUNT_K`
   );

ALTER TABLE ERPI.`GL_ACCOUNT_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_FACTS_COMPANY_FK` FOREIGN KEY (`COMPANY_K`)
    REFERENCES ERPI.`COMPANY`(`COMPANY_K`);

ALTER TABLE ERPI.`GL_ACCOUNT_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_FACTS_ACCOUNT_FK` FOREIGN KEY (`ACCOUNT_K`)
    REFERENCES ERPI.`GL_ACCOUNT`(`ACCOUNT_K`);

ALTER TABLE ERPI.`GL_ACCOUNT_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_FACTS_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`GL_ACCOUNT_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_FACTS_LOCAL_CURRENCY_FK` FOREIGN KEY (`LOCAL_CURRENCY_K`)
    REFERENCES ERPI.`LOCAL_CURRENCY`(`LOCAL_CURRENCY_K`);

CREATE TABLE ERPI.`GL_ACCOUNT_PERIOD_FACTS`
(
    `COMPANY_K` 		INTEGER NOT NULL,
    `LEDGER`	 		VARCHAR(2) NOT NULL DEFAULT 'GL', /* ledger type degenerate dimension */
	`ACCOUNT_K` 		INTEGER NOT NULL,
  	`DATE_PATTERN` 		character varying(2) NOT NULL,
  	`FISCAL_PERIOD_K` 	integer NOT NULL,
    `CREDIT` 			NUMERIC (12,2) NOT NULL,		/* credit base currency */
    `CREDIT_LOCAL`		NUMERIC (12,2) NOT NULL,		/* credit local currency */  
    `DEBIT` 			NUMERIC (12,2) NOT NULL,		/* debit base currency */ 
    `DEBIT_LOCAL` 		NUMERIC (12,2) NOT NULL,		/* debit local currency */ 
    `BALANCE` 			NUMERIC (12,2) NOT NULL,		/* balance base currency */ 
    `BALANCE_LOCAL`		NUMERIC (12,2) NOT NULL,		/* balance local currency */ 
	`ENDDATE` 			INTEGER NOT NULL,		        /* julian eop or delivery date */
    `PROFIT_CENTER_K` 	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 	INTEGER NOT NULL
);


 ALTER TABLE ERPI.`GL_ACCOUNT_PERIOD_FACTS`
 ADD CONSTRAINT  `GL_ACCOUNT_PERIOD_FACTS_K` PRIMARY KEY
   (
    `COMPANY_K`,
    `LEDGER`,
	`ACCOUNT_K`,
  	`DATE_PATTERN`,
  	`FISCAL_PERIOD_K`
   );

ALTER TABLE ERPI.`GL_ACCOUNT_PERIOD_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_PERIOD_FACTS_COMPANY_FK` FOREIGN KEY (`COMPANY_K`)
    REFERENCES ERPI.`COMPANY`(`COMPANY_K`);

ALTER TABLE ERPI.`GL_ACCOUNT_PERIOD_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_PERIOD_FACTS_ACCOUNT_FK` FOREIGN KEY (`ACCOUNT_K`)
    REFERENCES ERPI.`GL_ACCOUNT`(`ACCOUNT_K`);

ALTER TABLE ERPI.`GL_ACCOUNT_PERIOD_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_PERIOD_FACTS_FISCAL_PERIOD_FK` FOREIGN KEY (`FISCAL_PERIOD_K`)
    REFERENCES ERPI.`FISCAL_PERIODS`(`FISCAL_PERIOD_K`);

ALTER TABLE ERPI.`GL_ACCOUNT_PERIOD_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_PERIOD_FACTS_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`GL_ACCOUNT_PERIOD_FACTS`
ADD CONSTRAINT `GL_ACCOUNT_PERIOD_FACTS_LOCAL_CURRENCY_FK` FOREIGN KEY (`LOCAL_CURRENCY_K`)
    REFERENCES ERPI.`LOCAL_CURRENCY`(`LOCAL_CURRENCY_K`);

CREATE TABLE ERPI.`GL_BUDGET_PERIOD_FACTS`
(
    `COMPANY_K` 		INTEGER NOT NULL,
    `LEDGER_NK`	 		VARCHAR(2) NOT NULL DEFAULT 'GL', /* ledger type degenerate dimension */
    `BUDGET_K`	 		INTEGER NOT NULL,
	`BUDGET_DOC_NK`		VARCHAR(30) NOT NULL,			/* budget doc id degenerate dimension */
	`ACCOUNT_K` 		INTEGER NOT NULL,
  	`DATE_PATTERN` 		character varying(2) NOT NULL,
  	`FISCAL_PERIOD_K` 	integer NOT NULL,
    `AMOUNT` 			NUMERIC (12,2) NOT NULL,		/* balance base currency */ 
    `AMOUNT_LOCAL`		NUMERIC (12,2) NOT NULL,		/* balance local currency */ 
	`ENDDATE` 			INTEGER NOT NULL,		        /* julian eop or delivery date */
    `PROFIT_CENTER_K` 	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 	INTEGER NOT NULL
);


 ALTER TABLE ERPI.`GL_BUDGET_PERIOD_FACTS`
 ADD CONSTRAINT  `GL_BUDGET_PERIOD_FACTS_K` PRIMARY KEY
   (
    `COMPANY_K`,
    `LEDGER_NK`,
	`BUDGET_DOC_NK`,
	`ACCOUNT_K`,
	`FISCAL_PERIOD_K`
   );

ALTER TABLE ERPI.`GL_BUDGET_PERIOD_FACTS`
ADD CONSTRAINT `GL_BUDGET_PERIOD_FACTS_COMPANY_FK` FOREIGN KEY (`COMPANY_K`)
    REFERENCES ERPI.`COMPANY`(`COMPANY_K`);

ALTER TABLE ERPI.`GL_BUDGET_PERIOD_FACTS`
ADD CONSTRAINT `GL_BUDGET_PERIOD_FACTS_BUDGET_FK` FOREIGN KEY (`BUDGET_K`)
    REFERENCES ERPI.`GL_BUDGET`(`BUDGET_K`);

ALTER TABLE ERPI.`GL_BUDGET_PERIOD_FACTS`
ADD CONSTRAINT `GL_BUDGET_PERIOD_FACTS_ACCOUNT_FK` FOREIGN KEY (`ACCOUNT_K`)
    REFERENCES ERPI.`GL_ACCOUNT`(`ACCOUNT_K`);

ALTER TABLE ERPI.`GL_BUDGET_PERIOD_FACTS`
ADD CONSTRAINT `GL_BUDGET_PERIOD_FACTS_FISCAL_PERIOD_FK` FOREIGN KEY (`FISCAL_PERIOD_K`)
    REFERENCES ERPI.`FISCAL_PERIODS`(`FISCAL_PERIOD_K`);

ALTER TABLE ERPI.`GL_BUDGET_PERIOD_FACTS`
ADD CONSTRAINT `GL_BUDGET_PERIOD_FACTS_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`GL_BUDGET_PERIOD_FACTS`
ADD CONSTRAINT `GL_BUDGET_PERIOD_FACTS_LOCAL_CURRENCY_FK` FOREIGN KEY (`LOCAL_CURRENCY_K`)
    REFERENCES ERPI.`LOCAL_CURRENCY`(`LOCAL_CURRENCY_K`);

CREATE TABLE ERPI.`GL_FACTS_BY_PERIOD`
(
    `COMPANY_K` 		INTEGER NOT NULL,
    `LEDGER`	 		VARCHAR(2) NOT NULL DEFAULT 'GL', /* ledger type degenerate dimension */
    `BUDGET_K`	 		INTEGER NOT NULL,
	`ACCOUNT_K` 		INTEGER NOT NULL,
  	`DATE_PATTERN` 		character varying(2) NOT NULL,
  	`FISCAL_PERIOD_K` 	integer NOT NULL,
    `BALANCE` 			NUMERIC (12,2) NOT NULL,		
    `BALANCE_LOCAL`		NUMERIC (12,2) NOT NULL,		
    `DEBIT` 			NUMERIC (12,2) NOT NULL,		
    `DEBIT_LOCAL` 		NUMERIC (12,2) NOT NULL,
    `CREDIT` 			NUMERIC (12,2) NOT NULL,		
    `CREDIT_LOCAL` 		NUMERIC (12,2) NOT NULL,
    `BUDGET_AMOUNT` 			NUMERIC (12,2) NOT NULL,		
    `BUDGET_AMOUNT_LOCAL` 		NUMERIC (12,2) NOT NULL,			
	`ENDDATE` 			INTEGER NOT NULL,		       
    `PROFIT_CENTER_K` 	INTEGER NOT NULL,
    `LOCAL_CURRENCY_K` 	INTEGER NOT NULL
);


 ALTER TABLE ERPI.`GL_FACTS_BY_PERIOD`
 ADD CONSTRAINT  `GL_FACTS_BY_PERIOD_K` PRIMARY KEY
   (
    `COMPANY_K`,
    `LEDGER`,
	`BUDGET_K`,
	`ACCOUNT_K`,
  	`DATE_PATTERN`, 
  	`FISCAL_PERIOD_K`
   );

ALTER TABLE ERPI.`GL_FACTS_BY_PERIOD`
ADD CONSTRAINT `GL_FACTS_BY_PERIOD_COMPANY_FK` FOREIGN KEY (`COMPANY_K`)
    REFERENCES ERPI.`COMPANY`(`COMPANY_K`);

ALTER TABLE ERPI.`GL_FACTS_BY_PERIOD`
ADD CONSTRAINT `GL_FACTS_BY_PERIOD_BUDGET_FK` FOREIGN KEY (`BUDGET_K`)
    REFERENCES ERPI.`GL_BUDGET`(`BUDGET_K`);

ALTER TABLE ERPI.`GL_FACTS_BY_PERIOD`
ADD CONSTRAINT `GL_FACTS_BY_PERIOD_ACCOUNT_FK` FOREIGN KEY (`ACCOUNT_K`)
    REFERENCES ERPI.`GL_ACCOUNT`(`ACCOUNT_K`);

ALTER TABLE ERPI.`GL_FACTS_BY_PERIOD`
ADD CONSTRAINT `GL_FACTS_BY_PERIOD_FISCAL_PERIOD_FK` FOREIGN KEY (`FISCAL_PERIOD_K`)
    REFERENCES ERPI.`FISCAL_PERIODS`(`FISCAL_PERIOD_K`);

ALTER TABLE ERPI.`GL_FACTS_BY_PERIOD`
ADD CONSTRAINT `GL_FACTS_BY_PERIOD_PROFIT_CENTER_FK` FOREIGN KEY (`PROFIT_CENTER_K`)
    REFERENCES ERPI.`PROFIT_CENTER`(`PROFIT_CENTER_K`);

ALTER TABLE ERPI.`GL_FACTS_BY_PERIOD`
ADD CONSTRAINT `GL_FACTS_BY_PERIOD_LOCAL_CURRENCY_FK` FOREIGN KEY (`LOCAL_CURRENCY_K`)
    REFERENCES ERPI.`LOCAL_CURRENCY`(`LOCAL_CURRENCY_K`);

